{"version":3,"file":"ScrollObserver.js","sources":["ScrollObserver.js"],"sourcesContent":["const convertNumberToFloatingPoint = (step) => {\n  const isInt = `${step}`.indexOf('.') === -1;\n\n  if (step > 100 || (!isInt && Number(step) > 1)) {\n    throw Error(`Not more than 100% allowed: ${JSON.stringify({ step })}`);\n  }\n\n  return isInt ? step / 100 : step;\n};\n\n/**\n   * Creates threshold steps for the observer.\n   * @param {string} oneStep\n   * @param {string} excludeZero\n   * @returns {number[]}\n   * @memberof ScrollObserver\n   */\nconst createSteps = (step) => {\n  let oneStep = step ?? 0.25;\n\n  oneStep = convertNumberToFloatingPoint(oneStep);\n  const steps = Math.round(1 / oneStep);\n\n  const thresholds = Array(steps + 1)\n    .fill()\n    .map((_, i) => {\n      // do not go above 1\n      const num = Number((i * oneStep).toFixed(2));\n      return num > 1 ? 1 : num;\n    });\n\n  return thresholds;\n};\n\nconst hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport default class ScrollObserver {\n  #options = {};\n  #observer = {};\n  #triggerFunctions = {};\n\n  // ignore setting it on page load\n  #lastScrollPercentage = 'init';\n\n  isScrollingUp = true;\n  isScrollingDown = !this.isScrollingUp;\n\n  constructor(options) {\n    this.#init(options);\n\n    // setting document.body as root doesn't work somehow\n    const observerOptions = {\n      threshold: this.#options.thresholds,\n      root:\n        this.#options.target === document.body ? null : this.#options.target,\n      rootMargin: this.#options.rootMargin,\n    };\n\n    this.#observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          // from the element in the DOM\n          const scrollDepth = parseFloat(entry.target.dataset.threshold);\n          const threshold = scrollDepth * 100;\n          const canInteract = scrollDepth >= this.#options.interactWhen;\n\n          this.#setScrollDirection();\n\n          if (canInteract) {\n            for (const [percent, fns] of Object.entries(\n              this.#triggerFunctions,\n            )) {\n              if (Number(percent) === scrollDepth) {\n                fns.forEach((fn) => fn(threshold));\n              }\n            }\n          }\n\n          // Stop observing.\n          if (this.#options.triggerOnce) {\n            this.#observer.unobserve(entry.target);\n          }\n        }\n      });\n    }, observerOptions);\n\n    this.#setObserverMarkers();\n  }\n\n  #init = (options) => {\n    this.#setupOptions(options);\n\n    this.#setRelativeStyle();\n\n    if (this.#options.showRootMargin) { this.#showRootMargin(); }\n  };\n\n  // Set target position to relative to position makers absolute, if main body just set style, otherwise use wrapper\n  #setRelativeStyle = () => {\n    if (this.#options.target === document.body) {\n      this.#options.target.style.position = 'relative';\n    } else {\n      const wrapper = document.createElement('div');\n      wrapper.id = this.#options.scrollWrapperId;\n      wrapper.style.position = 'relative';\n      wrapper.innerHTML = this.#options.target.innerHTML;\n      this.#options.target.innerHTML = '';\n      this.#options.target.appendChild(wrapper);\n    }\n  };\n\n  #showRootMargin = () => {\n    const margins = this.#options.rootMargin.split(' ');\n\n    // eslint-disable-next-line prefer-const\n    let [, topMarginSign, topMargin, topMarginUnit] = /(-?)(\\d+)(\\w+|%)/.exec(\n      margins[0],\n    );\n    topMarginSign = topMarginSign === '' ? '+' : '-';\n\n    // eslint-disable-next-line prefer-const\n    let [, bottomMarginSign, bottomMargin, bottomMarginUnit] = /(-?)(\\d+)(\\w+|%)/.exec(margins[2]);\n    bottomMarginSign = bottomMarginSign === '' ? '+' : '-';\n\n    if (Number(topMargin) === 0 && Number(bottomMargin) === 0) {\n      return;\n    }\n\n    [document.createElement('div'), document.createElement('div')].forEach(\n      (marginElement, i) => {\n        const me = marginElement;\n        const isTopElement = i === 0;\n\n        me.style.position = 'fixed';\n\n        if (isTopElement) {\n          me.style.bottom = `calc(100% ${topMarginSign} ${topMargin}${topMarginUnit})`;\n          me.style.top = 0;\n        } else {\n          me.style.top = `calc(100% ${bottomMarginSign} ${bottomMargin}${bottomMarginUnit})`;\n          me.style.bottom = 0;\n        }\n\n        me.style.boxShadow = isTopElement\n          ? '0 3px 0 rgb(244, 246, 0)'\n          : '0 -3px 0 rgb(244, 246, 0)';\n\n        me.ariaHidden = true;\n\n        me.style.width = '100%';\n        me.style.height = isTopElement\n          ? topMargin + topMarginUnit\n          : bottomMargin + bottomMarginUnit;\n        me.style.background = 'rgba(225,190,18,0.7)';\n        me.style.display = 'block';\n        me.style.pointerEvents = 'none';\n\n        this.#appendElementToTarget(me);\n      },\n    );\n  };\n\n  #setScrollDirection = () => {\n    const currentScrollPercentage = this.#getCurrentScrollPercentage().rounded;\n    if (typeof this.#lastScrollPercentage === 'number') {\n      if (currentScrollPercentage < this.#lastScrollPercentage) {\n        this.isScrollingUp = false;\n      } else {\n        this.isScrollingUp = true;\n      }\n    }\n    this.#lastScrollPercentage = currentScrollPercentage;\n  };\n\n  /**\n   * Calculates the current scroll position on the page.\n   *\n   * @return {Object} The floating point number as percentage of the scroll position.\n   * @example\n   * { value: 3.285450149338643, rounded: 3, text: '3 %' }\n   */\n  #getCurrentScrollPercentage = () => {\n    const st = 'scrollTop';\n    const sh = 'scrollHeight';\n\n    let depth; let\n      scrollTop;\n\n    let h = document.documentElement;\n    const b = document.body;\n\n    if (this.#options.target === document.body) {\n      depth = (h[sh] || b[sh]) - h.clientHeight;\n      scrollTop = h[st] || b[st];\n    } else {\n      h = document.querySelector(`#${this.#options.scrollWrapperId}`);\n\n      depth = h[sh] - h.clientHeight;\n      scrollTop = h[st];\n    }\n\n    const scrollValue = (scrollTop / depth) * 100;\n    const scrollValueRounded = Math.round(scrollValue);\n\n    return depth === 0\n      ? { value: 0, rounded: 0, text: '0 %' }\n      : {\n        value: scrollValue,\n        rounded: scrollValueRounded,\n        text: `${scrollValueRounded} %`,\n      };\n  };\n\n  // registers a callback function which should trigger at a percentage\n  observe = (thresholds, fn) => {\n    // transform to array if necessary\n    const thresholdsArr = !Array.isArray(thresholds) ? Array.of(thresholds) : thresholds;\n\n    const currentScrollPercentage = this.#getCurrentScrollPercentage().value;\n\n    for (const threshold of thresholdsArr) {\n      const step = convertNumberToFloatingPoint(threshold);\n\n      // trigger callbacks already when scroll depth is above threshold on pageload\n      if (\n        this.#options.triggerPrevious\n        && Number(step) * 100 < currentScrollPercentage\n      ) {\n        fn(Number(step) * 100);\n\n        // eslint-disable-next-line no-continue\n        if (this.#options.triggerOnce) continue;\n      }\n\n      if (this.#triggerFunctions[step]) {\n        this.#triggerFunctions[step].push(fn);\n        return;\n      }\n      this.#triggerFunctions[step] = [];\n      this.#triggerFunctions[step].push(fn);\n    }\n  };\n\n  #appendElementToTarget = (elem) => {\n    if (this.#options.target === document.body) {\n      this.#options.target.appendChild(elem);\n    } else {\n      document\n        .querySelector(`#${this.#options.scrollWrapperId}`)\n        .appendChild(elem);\n    }\n  };\n\n  // inject markers in the DOM to trigger the observer\n  #setObserverMarkers = () => {\n    this.#options.thresholds.forEach((threshold, i) => {\n      // Create marker and set style.\n      const depthDiv = document.createElement('div');\n      depthDiv.className = this.#options.markerClasses;\n      depthDiv.style.position = 'absolute';\n      depthDiv.style.top = `${100 * threshold}%`;\n      depthDiv.style.pointerEvents = 'none';\n      depthDiv.style.left = '50%';\n      depthDiv.style.transform = 'translateX(-50%)';\n\n      depthDiv.dataset.threshold = threshold;\n      depthDiv.ariaHidden = true;\n      if (this.#options.markerIdPrefix) {\n        depthDiv.id = this.#options.markerIdPrefix + (i + 1);\n      }\n      if (!this.#options.showMarkers) {\n        depthDiv.style.zIndex = '-1';\n      }\n\n      if (this.#options.showMarkers) {\n        depthDiv.style.width = '100%';\n        depthDiv.style.height = '3px';\n        depthDiv.style.background = 'black';\n        depthDiv.style.display = 'block';\n      }\n\n      this.#appendElementToTarget(depthDiv);\n\n      // Observe Marker.\n      this.#observer.observe(depthDiv);\n    });\n  };\n\n  // error checking for thresholds\n  #checkThresholds = () => {\n    const isThresholdsTypeString = typeof this.#options.thresholds === 'string';\n    const isThresholdsTypeArray = Array.isArray(this.#options.thresholds);\n\n    if (!hasProp(this.#options, 'thresholds')) {\n      throw TypeError(\n        `Property 'tresholds' in ${this.constructor.name} options required.`,\n      );\n    } else if (!(isThresholdsTypeString || isThresholdsTypeArray)) {\n      throw TypeError(\n        `Property 'tresholds' in ${this.constructor.name} must be type of 'string' or 'array'.`,\n      );\n    } else if (\n      isThresholdsTypeString\n      && this.#options.thresholds.indexOf('.') === -1\n    ) {\n      throw TypeError(\n        `Property 'tresholds' in ${this.constructor.name} of type string must be floating point value.`,\n      );\n    } else if (isThresholdsTypeString) {\n      this.#options.thresholds = createSteps(this.#options.thresholds);\n    } else if (isThresholdsTypeArray) {\n      // filter duplicates, sort array and convert to floating point values of necessary\n      this.#options.thresholds = [...new Set(this.#options.thresholds)]\n        .sort((a, b) => {\n          if (a === Infinity || Number.isNaN(a)) {\n            throw new TypeError(\n              `Property 'tresholds' in ${this.constructor.name} is invalid. Only numbers are allowed.`,\n            );\n          }\n\n          return a - b;\n        })\n        .map((threshold) => convertNumberToFloatingPoint(threshold));\n    }\n  };\n\n  #formatRootMargin = () => {\n    const margins = this.#options.rootMargin.split(' ');\n\n    // Top Right Bottom Left\n    switch (margins.length) {\n      case 1: // TRBL\n        this.#options.rootMargin = `${margins[0]} `.repeat(4).trimEnd();\n        break;\n      case 2: // TB LR\n        this.#options.rootMargin = `${margins[0]} ${margins[1]} `\n          .repeat(2)\n          .trimEnd();\n        break;\n      case 3: // T LR B\n        this.#options.rootMargin = `${margins[0]} ${margins[1]} ${margins[1]} ${margins[2]}`;\n        break;\n      default:\n        break;\n    }\n  };\n\n  #setupOptions = (options) => {\n    const defaults = {\n      // element to monitor when scrolling\n      target: document.body,\n      /** sets the area margin when to trigger the thresholds,\n       * positive values shifts the detection area outside the screen\n       * to trigger callbacks earlier before they enter the viewport\n      */\n      rootMargin: '0px 0px 0px 0px',\n      /**\n       * These are the measure points, they will trigger the callbacks when the threshold entered the viewport.\n       * They represent percentages.\n       * Can be an array of values:\n       * [0, 10, 25, 45, 50, 70, 100]\n       * [0, 0.10, 0.25, 0.45, 0.50, 0.70, 1]\n       * Can be automatically generated by providing a step as string:\n       * '0.25' => [0, 0.25, 0.50, 0.75, 1]\n       * */\n      thresholds: [0, 0.25, 0.5, 0.75, 1],\n      // triggers only callbacks from this threshold and above, ignores the callbacks below this mark\n      interactWhen: 0,\n      // does not trigger on 0 scroll depth\n      excludeZero: false,\n      // triggers registered callbacks only once when the threshold was passed\n      triggerOnce: false,\n      // triggers registered callbacks on pageload when they are already below the current scroll depth\n      triggerPrevious: false,\n\n      // shows rootMargin areas when thresholds should trigger, may be not visible when it's outside the viewport\n      showRootMargin: false,\n      // display horizontal lines where the markers are located\n      showMarkers: false,\n      // set classes on markers\n      markerClasses: 'sc-scroll-depth-marker',\n      // set IDs for markers as a prefix followed by a number\n      markerIdPrefix: '',\n      scrollWrapperId: 'sc-scroll-wrapper',\n    };\n\n    this.#options = options ?? {};\n\n    // check for unwanted passed options\n    for (const prop of Object.keys(this.#options)) {\n      if (typeof defaults[prop] === 'undefined') {\n        throw new Error(\n          `Property '${prop}' in ${this.constructor.name} options invalid.`,\n        );\n      }\n    }\n\n    this.#checkThresholds();\n\n    // add defaults to options, if not available in passed config\n    for (const [option, val] of Object.entries(defaults)) {\n      if (!hasProp(this.#options, option)) {\n        this.#options[option] = val;\n      }\n    }\n\n    // cut off 0 from the array\n    if (\n      this.#options.excludeZero\n      && this.#options.thresholds.length > 0\n      && this.#options.thresholds[0] === 0\n    ) {\n      this.#options.thresholds = this.#options.thresholds.slice(1);\n    }\n\n    this.#formatRootMargin();\n  };\n}\n"],"names":["convertNumberToFloatingPoint","isInt","step","indexOf","Number","Error","JSON","stringify","createSteps","let","oneStep","steps","Math","round","Array","fill","map","_","i","num","toFixed","hasProp","obj","prop","Object","prototype","hasOwnProperty","call","ScrollObserver","#options","#observer","#triggerFunctions","#lastScrollPercentage","isScrollingUp","isScrollingDown","this","constructor","options","#init","observerOptions","threshold","thresholds","root","target","document","body","rootMargin","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollDepth","parseFloat","dataset","canInteract","interactWhen","#setScrollDirection","percent","fns","fn","triggerOnce","unobserve","#setObserverMarkers","#setupOptions","#setRelativeStyle","showRootMargin","#showRootMargin","style","position","wrapper","createElement","id","scrollWrapperId","innerHTML","appendChild","margins","split","topMarginSign","topMargin","topMarginUnit","exec","bottomMarginSign","bottomMargin","bottomMarginUnit","marginElement","me","isTopElement","bottom","top","boxShadow","ariaHidden","width","height","background","display","pointerEvents","#appendElementToTarget","currentScrollPercentage","#getCurrentScrollPercentage","rounded","st","sh","depth","scrollTop","h","documentElement","b","scrollValue","clientHeight","querySelector","scrollValueRounded","value","text","observe","thresholdsArr","isArray","of","triggerPrevious","push","elem","depthDiv","className","markerClasses","left","transform","markerIdPrefix","showMarkers","zIndex","#checkThresholds","isThresholdsTypeString","isThresholdsTypeArray","TypeError","name","Set","sort","a","Infinity","isNaN","#formatRootMargin","length","repeat","trimEnd","option","val","defaults","excludeZero","keys","slice"],"mappings":"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"}